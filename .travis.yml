language: php

php:
  - 5.2 # test everything on PHP 5.2 (legacy CakePHP, all databases, Sencha Touch and Ext JS)

env:
  - TOUCH_VERSION=2.3.1a
  - TOUCH_VERSION=2.3.1
  - TOUCH_VERSION=2.3.0
  - TOUCH_VERSION=2.2.1
  - TOUCH_VERSION=2.2.0
  - TOUCH_VERSION=2.1.1
  - TOUCH_VERSION=2.1.0
  - TOUCH_VERSION=2.0.1.1

  - EXTJS_VERSION_WITHOUT_COMMENTS=5.0.0
  - EXTJS_VERSION=4.2.1
  - EXTJS_VERSION=4.2.0
  - EXTJS_VERSION_LEGACY=4.1.1a
  - EXTJS_VERSION_LEGACY=4.1.0
  - EXTJS_VERSION_LEGACY=4.0.7

  - DB=mysql CAKEPHP_VERSION=master
  - DB=mysql CAKEPHP_VERSION=2.4.10
  - DB=mysql CAKEPHP_VERSION=2.4.0
  - DB=mysql CAKEPHP_VERSION=2.3.8
  - DB=mysql CAKEPHP_VERSION=2.3.0
  - DB=mysql CAKEPHP_VERSION=2.2.8
  - DB=mysql CAKEPHP_VERSION=2.2.0
  - DB=mysql CAKEPHP_VERSION=2.1.5
  - DB=mysql CAKEPHP_VERSION=2.1.0

  - DB=pgsql CAKEPHP_VERSION=master
  - DB=pgsql CAKEPHP_VERSION=2.4.10
  - DB=pgsql CAKEPHP_VERSION=2.3.8
  - DB=pgsql CAKEPHP_VERSION=2.2.8
  - DB=pgsql CAKEPHP_VERSION=2.1.5

  - DB=sqlite CAKEPHP_VERSION=master
  - DB=sqlite CAKEPHP_VERSION=2.4.10
  - DB=sqlite CAKEPHP_VERSION=2.3.8
  - DB=sqlite CAKEPHP_VERSION=2.2.8
  - DB=sqlite CAKEPHP_VERSION=2.1.5

matrix:
  fast_finish: true
  #allow_failures:
  #  - php: 5.5
  #    env: PHPCS=1
  include:
    # Run PHPCS on the code
    - php: 5.5
      env: PHPCS=1
    # Test all newer CakePHP versions on PHP 5.3
    - php: 5.3
      env: DB=mysql CAKEPHP_VERSION=master
    - php: 5.3
      env: DB=mysql CAKEPHP_VERSION=2.4.10
    - php: 5.3
      env: DB=mysql CAKEPHP_VERSION=2.3.8
    # Test all newer CakePHP versions on PHP 5.4
    - php: 5.4
      env: DB=mysql CAKEPHP_VERSION=master
    - php: 5.4
      env: DB=mysql CAKEPHP_VERSION=2.4.10
    - php: 5.4
      env: DB=mysql CAKEPHP_VERSION=2.3.8
    # Test all newer CakePHP versions on PHP 5.5
    - php: 5.5
      env: DB=mysql CAKEPHP_VERSION=master
    - php: 5.5
      env: DB=mysql CAKEPHP_VERSION=2.4.10
    - php: 5.5
      env: DB=mysql CAKEPHP_VERSION=2.3.8
    # Test all newer CakePHP versions on PHP 5.6
    - php: 5.6
      env: DB=mysql CAKEPHP_VERSION=master
    - php: 5.6
      env: DB=mysql CAKEPHP_VERSION=2.4.10
    - php: 5.6
      env: DB=mysql CAKEPHP_VERSION=2.3.8
    # Test all databases on PHP 5.6
    - php: 5.6
      env: DB=pgsql CAKEPHP_VERSION=master
    - php: 5.6
      env: DB=sqlite CAKEPHP_VERSION=master

branches:
  only:
    - master

before_script:
  # create the databases
  - sh -c "if [ '$DB' = 'mysql' ]; then mysql -e 'CREATE DATABASE bancha_test;'; fi"
  - sh -c "if [ '$DB' = 'pgsql' ]; then psql -c 'CREATE DATABASE bancha_test;' -U postgres; fi"
  - sh -c "if [ '$DB' = 'pgsql' ]; then psql -c 'CREATE SCHEMA bancha_test;' -U postgres -d bancha_test; fi"

  # Prepare the Bancha plugin
  - mkdir .Bancha # create hidden subdirectory (which is not moved by the mv command)
  - mv ./* .Bancha/ # copy everything (except the hidden directories) into the directory
  - mv .Bancha Bancha # unhide it for later use

  # Download cakephp
  - if [ $CAKEPHP_VERSION ]; then wget https://github.com/cakephp/cakephp/tarball/$CAKEPHP_VERSION -O cake.tar.gz ; fi # get cakephp
  - if [ $CAKEPHP_VERSION ]; then tar xf cake.tar.gz ; fi # extract cakephp
  - if [ $CAKEPHP_VERSION ]; then mv cakephp-cakephp-* ./cakephp ; fi # move cakephp to its folder
  - if [ $CAKEPHP_VERSION ]; then chmod -R 777 ./cakephp/app/tmp ; fi # make tmp executable

  # Setup the TestProject for Bancha
  - if [ $CAKEPHP_VERSION ]; then rm -r ./cakephp/app ; fi #remove the default app
  - if [ $CAKEPHP_VERSION ]; then git clone --recursive https://github.com/Bancha/BanchaTestProject.git cakephp/app ; fi # clone Testproject as base

  # If we don't need to test CakePHP code, simply mimik file structure
  - if [ -z "$CAKEPHP_VERSION" ]; then mkdir ./cakephp ; fi
  - if [ -z "$CAKEPHP_VERSION" ]; then mkdir ./cakephp/app ; fi
  - if [ -z "$CAKEPHP_VERSION" ]; then mkdir ./cakephp/app/Plugin ; fi
  - if [ -z "$CAKEPHP_VERSION" ]; then mkdir ./cakephp/app/Plugin/Bancha ; fi

  # Used in the cake core tests, activate if a webserver is needed
  # - echo "var net = require('net');
  #  var server = net.createServer();
  #  server.listen(80, 'localhost');
  #  console.log('TCP server listening on port 80 at localhost.');" > app/tmp/socket.js
  #- sudo node ./app/tmp/socket.js &

  # Setup the database config
  - if [ -z "$CAKEPHP_VERSION" ]; then mkdir ./cakephp/app/Plugin/Bancha2 ; fi
  - if [ -z "$CAKEPHP_VERSION" ]; then set +H ; fi # needed for pasting the following config file
  - if [ -z "$CAKEPHP_VERSION" ]; then echo "<?php
    class DATABASE_CONFIG {
    private \$identities = array(
      'mysql' => array(
        'datasource' => 'Database/Mysql',
        'host' => '0.0.0.0',
        'login' => 'travis'
      ),
      'pgsql' => array(
        'datasource' => 'Database/Postgres',
        'host' => '127.0.0.1',
        'login' => 'postgres',
        'database' => 'bancha_test',
        'schema' => array(
          'default' => 'public',
          'test' => 'public',
        )
      ),
      'sqlite' => array(
        'datasource' => 'Database/Sqlite',
        'database' => array(
          'default' => ':memory:',
          'test' => ':memory:',
        ),
      )
    );
    public \$default = array(
      'persistent' => false,
      'host' => '',
      'login' => '',
      'password' => '',
      'database' => 'bancha_test',
      'prefix' => ''
    );
    public \$test = array(
      'persistent' => false,
      'host' => '',
      'login' => '',
      'password' => '',
      'database' => 'bancha_test',
      'prefix' => ''
    );
    public function __construct() {
      \$db = 'mysql';
      if (!empty(\$_SERVER['DB'])) {
        \$db = \$_SERVER['DB'];
      }
      foreach (array('default', 'test') as \$source) {
        \$config = array_merge(\$this->{\$source}, \$this->identities[\$db]);
        if (is_array(\$config['database'])) {
          \$config['database'] = \$config['database'][\$source];
        }
        if (!empty(\$config['schema']) && is_array(\$config['schema'])) {
          \$config['schema'] = \$config['schema'][\$source];
        }
        \$this->{\$source} = \$config;
      }
    }
    }" > ./cakephp/app/Config/database.php ; fi #create database config file for cakephp

  # Setup the Bancha plugin
  - rm -r ./cakephp/app/Plugin/Bancha
  - mv ./Bancha ./cakephp/app/Plugin/ #move the Bancha Plugin to its destined directory
  - cd ./cakephp # move into the directory for execution

  # CakePHP needs PHPUnit 3.7, Travis updated to PHPUnit 4 for PHP 5.2+
  - sh -c "if [ $CAKEPHP_VERSION -a '$TRAVIS_PHP_VERSION' != '5.2' ]; then composer global require 'phpunit/phpunit=3.7.33'; fi"
  - sh -c "if [ $CAKEPHP_VERSION -a '$TRAVIS_PHP_VERSION' != '5.2' ]; then ln -s ~/.composer/vendor/phpunit/phpunit/PHPUnit ./vendors/PHPUnit; fi"

  # install PHPCS
  - if [ $PHPCS ]; then pear channel-discover pear.cakephp.org ; fi
  - if [ $PHPCS ]; then pear install --alldeps cakephp/CakePHP_CodeSniffer ; fi
  - if [ $PHPCS ]; then phpenv rehash ;fi

  # now prepare the jasmine tests
  - cd app/Plugin/Bancha/Test/JavaScriptUnitTest/lib
  - if [ $TOUCH_VERSION ]; then wget http://cdn.sencha.io/touch/sencha-touch-$TOUCH_VERSION/sencha-touch-all-debug.js ; fi
  - if [ $EXTJS_VERSION_WITHOUT_COMMENTS ]; then wget http://cdn.sencha.io/ext/gpl/$EXTJS_VERSION_WITHOUT_COMMENTS/build/ext-all-debug.js -O ext-all-debug-w-comments.js ; fi
  - if [ $EXTJS_VERSION ]; then wget http://cdn.sencha.io/ext/gpl/$EXTJS_VERSION/ext-all-debug-w-comments.js ; fi
  - if [ $EXTJS_VERSION_LEGACY ]; then wget http://cdn.sencha.io/ext-$EXTJS_VERSION_LEGACY-gpl/ext-all-debug-w-comments.js ; fi
  - cd ../../../../../../

  # get pahntomjs for jasmine
  - wget https://raw.github.com/mark-rushakoff/OpenPhantomScripts/master/phantom-jasmine.js

script:
  # execute the jasmine tests for Sencha Touch and Ext JS
  - if [ $TOUCH_VERSION ]; then phantomjs phantom-jasmine.js app/Plugin/Bancha/Test/JavaScriptUnitTest/TouchSpecRunner.html ; fi
  - if [[ $EXTJS_VERSION || $EXTJS_VERSION_LEGACY || $EXTJS_VERSION_WITHOUT_COMMENTS ]]; then phantomjs phantom-jasmine.js app/Plugin/Bancha/Test/JavaScriptUnitTest/SpecRunner.html ; fi

  # execute the PHPUnti tests for CakePHP
  - if [ $CAKEPHP_VERSION ]; then chmod a+x ./lib/Cake/Console/cake; fi # make sure to execute it
  - if [ $CAKEPHP_VERSION -a -z "$PHPCS" ]; then ./lib/Cake/Console/cake test Bancha AllTests --stderr  ; fi # execute all Tests

  # execude PHP_CodeSniffer
  - if [ $PHPCS ]; then sh -c "phpcs -p --extensions=php -n --standard=CakePHP --ignore=./app/Plugin/Bancha/webroot/js/scaffold,./app/Plugin/Bancha/Lib/Bancha/Logging/PiwikTracker.php ./app/Plugin/Bancha" ; fi

notifications:
  email:
    recipients:
      - mail@banchaproject.org
