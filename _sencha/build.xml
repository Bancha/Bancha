<project basedir=".">

    <!--
        Please follow this guide for instructions of how to add support 
        for Sencha Cmd to Bancha:

        http://bancha.io/documentation-pro-sencha-cmd.html
    -->






    <!--
    ###################################################################
    ###################################################################
    ###                                                             ###
    ###   This task makes basic checks on necessary properties      ###
    ###                                                             ###
    ###################################################################
    ###################################################################
    -->
    <target name="-bancha-check-setup">

        <!-- check sencha.cfg variables -->
        <fail message="Missing property: Please define the bancha.baseUrl property inside sencha.cfg">
            <condition>
                <or>
                    <equals arg1="${bancha.baseUrl}" arg2=""/>
                    <not>
                        <isset property="bancha.baseUrl"/>
                    </not>
               </or>
           </condition>
        </fail>

        <fail message="Missing property: Please change the bancha.api.url property inside sencha.cfg">
            <condition>
                <or>
                    <equals arg1="${bancha.api.url}" arg2="http://my-local-host.com/bancha-api-packaged/models/all.js"/>
               </or>
           </condition>
        </fail>

        <fail message="Bancha Error: The Sencha CMD configuration needs to be updated. Please define bancha.folder.relative instead of bancha.folder inside sencha.cfg">
            <condition>
                <isset property="bancha.folder"/>
           </condition>
        </fail>

        <fail message="Missing property: Please define the bancha.folder.relative property inside sencha.cfg">
            <condition>
                <or>
                    <equals arg1="${bancha.folder.relative}" arg2=""/>
                    <not>
                        <isset property="bancha.folder.relative"/>
                    </not>
               </or>
           </condition>
        </fail>
       
        <!-- Add optional properties if not defined yet -->
        <if>
            <not>
                <isset property="bancha.folder.absolute"/>
            </not>
            <then>
                <property name="bancha.folder.absolute" value="${app.dir}/${bancha.folder.relative}"/>
            </then>
       </if>
        <if>
            <not>
                <isset property="bancha.script.url"/>
            </not>
            <then>
                <property name="bancha.script.url" value="${bancha.baseUrl}/bancha"/>
            </then>
       </if>
        <if>
            <not>
                <isset property="bancha.api.url"/>
            </not>
            <then>
                <property name="bancha.api.url" value="${bancha.baseUrl}/bancha-api-packaged/models/all.js"/>
            </then>
       </if>

        <if>
            <!-- 
                Sencha Architect 3.0.1+ ignores any app.classpath set inside sencha.cfg.
                Therefore we need to enforce adding this property to the classpath.
                Since you can't override a property, we need to first unset it.

                The new integration now always add the path here. But since there might be 
                old configuration which already include it, in these cases don't add it a 
                second time.
            -->
            <not>
                <matches pattern="Bancha\/webroot\/js" string="${app.classpath}"/>
            </not>
            <then>
                <property name="app.classpath-original" value="${app.classpath}"/>
                <var name="app.classpath" unset="true"/>
                <property name="app.classpath" value="${app.classpath-original},${bancha.folder.absolute}/webroot/js"/>
                <var name="app.classpath-original" unset="true"/>
                <echo message="Extended app.classpath to ${app.classpath}"/>
            </then>
       </if>
        <fail message="Missing property: Please add a path to Bancha's webroot/js folder in your app.classpath property inside sencha.cfg, current app.classpath value: ${app.classpath}">
            <condition>
                <not>
                    <matches pattern="Bancha\/webroot\/js" string="${app.classpath}"/>
                </not>
            </condition>
       </fail>
    </target>



    <!--
    ###################################################################
    ###################################################################
    ###                                                             ###
    ###   These tasks add packaging support for both native and     ###
    ###   web, they allow allow calling of app refreh for apps      ###
    ###   with Bancha models.                                       ###
    ###                                                             ###
    ###################################################################
    ###################################################################
    -->
    <target name="-bancha-before-app-build" depends="-bancha-check-setup">

        <!-- Copy the Bancha Remote API for packaging with Sencha CMD -->
        <get src="${bancha.api.url}" dest="${app.dir}/app/REMOTE_API.js"/>

        <!-- set framework-specific tags for building bancha code -->
        <if>
            <equals arg1="${app.framework}" arg2="touch"/>
            <then>
                <property name="sencha.compile#options" value="ext:false,touch:true"/>
            </then>
            <else>
                <property name="sencha.compile#options" value="ext:true,touch:false"/>
            </else>
        </if>

        <!-- exclude unnecessary shims & scaffold files -->
        <x-ant-call>
            <target name="-bancha-remove-files-for-build"/>
        </x-ant-call>
    </target>

    <target name="-bancha-after-app-build">

        <!-- Remove the file again -->
        <delete file="${app.dir}/app/REMOTE_API.js"/>

        <!-- exclude restore all schims & scaffold files -->
        <x-ant-call>
            <target name="-bancha-restore-files-after-build"/>
        </x-ant-call>

        <!-- Fix the microloader pathes for development mode (use for Sencha Architect projects with Ext JS 4 and 5) -->
        <if>
            <available file="${app.dir}/bootstrap.json"/>
            <then>
                <echo message="Updated bootstrap.json" />
                <replace file="${app.dir}/bootstrap.json" token="../../Plugin/Bancha/webroot" value="${bancha.script.url}" />
                <replace file="${app.dir}/bootstrap.json" token="app/REMOTE_API.js" value="${bancha.api.url}" />
            </then>
        </if>

        <!-- Fix the microloader pathes for development mode (use for Sencha Architect projects with Sencha Touch) -->
        <if>
            <available file="${app.dir}/bootstrap.json"/>
            <then>
                <echo message="Updated bootstrap.js" />
                <replace file="${app.dir}/bootstrap.js" token="../../Plugin/Bancha/webroot" value="${bancha.script.url}" />
                <replace file="${app.dir}/bootstrap.js" token="app/REMOTE_API.js" value="${bancha.api.url}" />
            </then>
        </if>
    </target>






    <!--
    ###################################################################
    ###################################################################
    ###                                                             ###
    ###   Helper targets, needed because Sencha Cmd does not allow  ###
    ###   to simply exclude files.                                  ###
    ###                                                             ###
    ###   Simply excluding the files from the set does not work,    ###
    ###   because not all js files are valid in all frameworks.     ###
    ###   Therefore the x-load-app-builder-properties would fail.   ###
    ###                                                             ###
    ###################################################################
    ###################################################################
    -->
    <target name="-bancha-remove-files-for-build">

        <!-- Bancha Scaffold sould only by included in Ext JS builds -->
        <available file="${bancha.folder.absolute}/webroot/js/scaffold" type="dir" property="touch.scaffoldnotmoved"/>
        <available file="${bancha.folder.absolute}/webroot/js/scaffold/builder" type="dir" property="ext.scaffoldnotmoved"/>
        <available file="${bancha.folder.absolute}/webroot/js/data/validations.js" type="file" property="ext.extjs5classesnotmoved"/>
        <available file="${bancha.folder.absolute}/webroot/js/data/validator/Validator.js" type="file" property="ext.extjs4classesnotmoved"/>
        <if>
            <and>
                <equals arg1="${app.framework}" arg2="touch"/>
                <equals arg1="${touch.scaffoldnotmoved}" arg2="true"/>
            </and>
            <then>
                <move
                    file="${bancha.folder.absolute}/webroot/js/scaffold"
                    todir="${bancha.folder.absolute}/webroot"/>
            </then>
        </if>
        <if>
            <and>
                <equals arg1="${app.framework}" arg2="ext"/>
                <equals arg1="${ext.scaffoldnotmoved}" arg2="true"/>
            </and>
            <then>
                <!-- don't include conflicting builder and latest-build folders -->
                <mkdir dir="${bancha.folder.absolute}/webroot/scaffold-tmp" />
                <move
                    file="${bancha.folder.absolute}/webroot/js/scaffold/builder"
                    todir="${bancha.folder.absolute}/webroot/scaffold-tmp"/>
                <move
                    file="${bancha.folder.absolute}/webroot/js/scaffold/latest-build"
                    todir="${bancha.folder.absolute}/webroot/scaffold-tmp"/>
                <move
                    file="${bancha.folder.absolute}/webroot/js/scaffold/samples"
                    todir="${bancha.folder.absolute}/webroot/scaffold-tmp"/>
                <move
                    file="${bancha.folder.absolute}/webroot/js/scaffold/tests"
                    todir="${bancha.folder.absolute}/webroot/scaffold-tmp"/>
                <!-- move duplicate classes -->
                <move
                    file="${bancha.folder.absolute}/webroot/js/scaffold/src/data"
                    todir="${bancha.folder.absolute}/webroot/scaffold-tmp"/>
            </then>
        </if>

        <if>
            <and>
                <and>
                    <equals arg1="${app.framework}" arg2="ext"/>
                    <contains string="${app.framework.version}" substring="5."/>
                </and>
                <equals arg1="${ext.extjs4classesnotmoved}" arg2="true"/>
            </and>
            <then>
                <!-- don't include the Ext JS 4 & Sencha Touch shims in Ext JS 5 projects-->
                <mkdir dir="${bancha.folder.absolute}/webroot/data-tmp4" />
                <mkdir dir="${bancha.folder.absolute}/webroot/data-tmp4/validator" />
                <move
                    file="${bancha.folder.absolute}/webroot/js/data/validator/Validator.js"
                    todir="${bancha.folder.absolute}/webroot/data-tmp4/validator"/>
                <move
                    file="${bancha.folder.absolute}/webroot/js/data/validator/Bound.js"
                    todir="${bancha.folder.absolute}/webroot/data-tmp4/validator"/>
                <move
                    file="${bancha.folder.absolute}/webroot/js/data/validator/Range.js"
                    todir="${bancha.folder.absolute}/webroot/data-tmp4/validator"/>
            </then>
        </if>

        <if>
            <and>
                <not>
                    <and>
                        <equals arg1="${app.framework}" arg2="ext"/>
                        <contains string="${app.framework.version}" substring="5."/>
                    </and>
                </not>
                <equals arg1="${ext.extjs5classesnotmoved}" arg2="true"/>
            </and>
            <then>
                <!-- don't include the Ext JS 5 shim in Ext JS 4 and Sencha Touch applications -->
                <mkdir dir="${bancha.folder.absolute}/webroot/data-tmp5" />
                <move
                    file="${bancha.folder.absolute}/webroot/js/data/validations.js"
                    todir="${bancha.folder.absolute}/webroot/data-tmp5"/>
            </then>
        </if>
    </target>

    <target name="-bancha-restore-files-after-build">

        <available file="${bancha.folder.absolute}/webroot/scaffold" type="dir" property="touch.scaffoldmoved"/>
        <available file="${bancha.folder.absolute}/webroot/scaffold-tmp/builder" type="dir" property="ext.scaffoldmoved"/>
        <available file="${bancha.folder.absolute}/webroot/data-tmp4/validator/Validator.js" type="file" property="ext.validationshimforextjs4moved"/>
        <available file="${bancha.folder.absolute}/webroot/data-tmp5/validations.js" type="file" property="ext.validationshimforextjs5moved"/>

        <!-- Move Bancha Scaffold to default folder again -->
        <if>
            <equals arg1="${touch.scaffoldmoved}" arg2="true"/>
            <then>
                <move
                    file="${bancha.folder.absolute}/webroot/scaffold"
                    todir="${bancha.folder.absolute}/webroot/js"/>
            </then>
        </if>

        <if>
            <equals arg1="${ext.scaffoldmoved}" arg2="true"/>
            <then>
                <!-- Move Bancha Scaffold folders to default folder again -->
                <move
                    file="${bancha.folder.absolute}/webroot/scaffold-tmp/builder"
                    todir="${bancha.folder.absolute}/webroot/js/scaffold"/>
                <move
                    file="${bancha.folder.absolute}/webroot/scaffold-tmp/latest-build"
                    todir="${bancha.folder.absolute}/webroot/js/scaffold"/>
                <move
                    file="${bancha.folder.absolute}/webroot/scaffold-tmp/samples"
                    todir="${bancha.folder.absolute}/webroot/js/scaffold"/>
                <move
                    file="${bancha.folder.absolute}/webroot/scaffold-tmp/tests"
                    todir="${bancha.folder.absolute}/webroot/js/scaffold"/>
                <!-- move duplicate classes -->
                <move
                    file="${bancha.folder.absolute}/webroot/scaffold-tmp/data"
                    todir="${bancha.folder.absolute}/webroot/js/scaffold/src"/>
                <!-- remove tmp folder -->
                <delete dir="${bancha.folder.absolute}/webroot/scaffold-tmp"/>
            </then>
        </if>

        <!-- Move Ext JS 4 fake class back -->
        <if>
            <equals arg1="${ext.validationshimforextjs4moved}" arg2="true"/>
            <then>
                <move
                    file="${bancha.folder.absolute}/webroot/data-tmp4/validator/Validator.js"
                    todir="${bancha.folder.absolute}/webroot/js/data/validator"/>
                <move
                    file="${bancha.folder.absolute}/webroot/data-tmp4/validator/Bound.js"
                    todir="${bancha.folder.absolute}/webroot/js/data/validator"/>
                <move
                    file="${bancha.folder.absolute}/webroot/data-tmp4/validator/Range.js"
                    todir="${bancha.folder.absolute}/webroot/js/data/validator"/>
                <!-- remove tmp folder -->
                <delete dir="${bancha.folder.absolute}/webroot/data-tmp4"/>
            </then>
        </if>

        <!-- Move Ext JS 5 fake class back -->
        <if>
            <equals arg1="${ext.validationshimforextjs5moved}" arg2="true"/>
            <then>
                <move
                    file="${bancha.folder.absolute}/webroot/data-tmp5/validations.js"
                    todir="${bancha.folder.absolute}/webroot/js/data"/>
                <!-- remove tmp folder -->
                <delete dir="${bancha.folder.absolute}/webroot/data-tmp5"/>
            </then>
        </if>

    </target>
</project>
